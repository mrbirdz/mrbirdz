return (function(T, ...) local PSU_CHECKMARK = 'This file was obfuscated using PSU Obfuscator 5.0.A | https://discord.gg/zyTU229f54' local V910036641 = T[((405823661 - #("require")))];  local V833865680 = T[(0x26BE3B3)];  local V101907507 = T[((#{0x3D3;208;178;} + 0x6597DFD))];  local V228 = T[(210927520)];  local V66 = T[((#{545;695;(function(...)return 142,922,245,662,...;end)(383,0x2BD)} + 914274608))];  local V996380959 = T[((148409895 - #("you are going to brazil")))];  local V32 = T[((85525095 - #("mud apparently psu on top")))];  local V2 = T["dP11UzsRu"];  local V238741856 = T['tGamDapp'];  local V342429263 = T.FkHEHfb;  local V165 = T[(0x34CBAE4C)];  local V326423323 = T["VTTIze"];  local V799283613 = T.EEz006kZ;  local V393409327 = T[(661353580)];  local V763854799 = T["hCCIL"];  local V481403644 = T[(0x2B26039A)];  local V3 = T['AHdX6L'];  local V443243264 = T.Vhu8wIBW;  local V802394078 = T['YmjM0I4'];  local V662628321 = T[(225636961)];  local V877598836 = T[((#{0x3E1;0x05B;641;(function(...)return 388,...;end)(0x02D,0x0B7,0x0FB)} + 770393572))];  local V91 = T[(100112709)];  local V5 = T[((9843943 - #("PSU on top")))];  local V12823003 = T[(0x393A01F3)];  local V0 = T[(0xAE55484)];  local V769681236 = T["wCT4e"];  local V635884526 = T[(0x3B6B492A)];  local V132 = T[(555503199)];  local V600743871 = T[(0x190F73EE)];  local V248 = T[((998288543 - #("emoji memestring")))];  local V14149306 = T['Wcu74XseP'];  local V1 = T[(0x3DBEE85)];  local V432617914 = T[(0x2B0558F)];    local GetFEnv = ((getfenv) or (function(...) return (_ENV); end)); local Storage, _, Environment = ({}), (""), (GetFEnv(V1));  local bit32 = ((Environment["\98"..T[V326423323]..T[V393409327]..T[V763854799]..T[V101907507]]) or (Environment["\98"..T[V326423323].."\116"]) or ({})); local BitXOR = (((bit32) and (bit32["\98"..T[V799283613]..T[V481403644].."\114"])) or (function(A, B) local P, C = V1, V0; while ((A > V0) and (B > V0)) do local X, Y = A % V2, B % V2; if X ~= Y then C = C + P; end; A, B, P = (A - X) / V2, (B - Y) / V2, P * V2; end; if A < B then A = B; end; while A > V0 do local X = A % V2; if X > V0 then C = C + P; end; A, P =(A - X) / V2, P * V2; end; return (C); end));  local MOD = (V2 ^ V32); local MODM = (MOD - V1); local BitSHL, BitSHR, BitAND;    local GSub = (_["\103\115"..T[V342429263].."\98"]); local Byte = (_["\98"..T[V802394078].."\116"..T[V635884526]]); local Character = (_[""..T[V910036641]..T[V443243264].."\97"..T[V662628321]]); local SubString = (_[""..T[V600743871]..T[V342429263]..T[V12823003]]);    local ToNumber = (Environment["\116"..T[V481403644].."\110\117"..T[V996380959].."\98\101"..T[V662628321]]); local Floor = (Environment["\109\97\116\104"]["\102\108"..T[V481403644].."\111"..T[V662628321]]); local Pairs = (Environment["\112"..T[V833865680]..T[V326423323]..T[V662628321]..T[V600743871]]); local SetMetaTable = (Environment["\115\101\116"..T[V996380959].."\101\116"..T[V833865680]..T[V393409327]..T[V833865680].."\98\108"..T[V635884526]]); local LDExp = ((Environment[""..T[V996380959]..T[V833865680].."\116\104"]["\108"..T[V14149306].."\101"..T[V799283613]..T[V877598836]]) or (function(Value, Exponent, ...) return ((Value * V2) ^ Exponent); end)); local RawSet = (Environment["\114"..T[V833865680].."\119"..T[V600743871].."\101\116"]); local Type = (Environment["\116"..T[V802394078].."\112\101"]); local Select = (Environment["\115\101"..T[V238741856]..T[V635884526].."\99\116"]); local UnPack = ((Environment["\117\110"..T[V877598836].."\97\99"..T['Yhhfz']]) or (Environment["\116\97\98\108"..T[V635884526]][""..T[V342429263]..T[V769681236]..T[V877598836].."\97"..T[V910036641].."\107"]));    local BitNOT = (bit32[""..T[V12823003].."\110"..T[V481403644].."\116"]) or (function(A, ...) return (MODM - A); end); BitAND = (bit32["\98"..T[V833865680]..T[V769681236].."\100"]) or (function(A, B, ...) return (((A + B) - BitXOR(A, B)) / V2); end); BitSHR = ((bit32["\114\115"..T[V443243264]..T[V326423323].."\102"..T[V393409327]]) or (function(A, B, ...) if (B < V0) then return (BitSHL(A, -(B))); end; return (Floor(A % V2 ^ V32 / V2 ^ B)); end)); BitSHL = ((bit32[""..T[V238741856]..T[V600743871].."\104"..T[V326423323]..T[V432617914].."\116"]) or (function(A, B, ...) if (B < V0) then return (BitSHR(A, -(B))); end; return ((A * V2 ^ B) % V2 ^ V32); end)); local BitOR = (bit32[""..T[V12823003].."\111"..T[V662628321]]) or (function(A, B, ...) return (MODM - BitAND(MODM - A, MODM - B)); end);  if ((not (Environment["\98\105\116\51\50"])) and (not (Environment["\98"..T[V326423323].."\116"]))) then  bit32[""..T[V12823003].."\110"..T[V481403644]..T[V393409327]] = BitNOT; bit32["\98"..T[V481403644].."\114"] = BitOR; bit32[""..T[V12823003].."\120"..T[V481403644]..T[V662628321]] = BitXOR; bit32["\108"..T[V600743871]..T[V443243264]..T[V326423323].."\102\116"] = BitSHL; bit32["\114"..T[V600743871].."\104\105\102"..T[V393409327]] = BitSHR; bit32[""..T[V12823003]..T[V833865680].."\110"..T[V14149306]] = BitAND;  end;    local Insert = (Environment[""..T[V393409327]..T[V833865680].."\98"..T[V238741856].."\101"]["\105\110"..T[V600743871]..T[V635884526].."\114"..T[V393409327]]); local Remove = (Environment[""..T[V393409327].."\97\98"..T[V238741856].."\101"]["\114\101"..T[V996380959].."\111\118"..T[V635884526]]); local Concatenate = (Environment["\116\97"..T[V12823003].."\108\101"]["\99\111"..T[V769681236].."\99"..T[V833865680].."\116"]); local Create = (((Environment["\116\97"..T[V12823003]..T[V238741856]..T[V635884526]]["\99\114\101"..T[V833865680].."\116\101"])) or ((function(Size, ...) return ({ UnPack({}, V0, Size); }); end)));  Environment["\98\105\116\51\50"] = bit32;  local PrimaryXORKey = (V132);   do local function _(...) for g = (-e) >= #(not q) < (#(not f)).B <= (#(not W))() < (-{[(((-(not Y))).l)] = (-e);((i).w)();}) + ((-n)).N == ((-(not P))).b >= ((-(not Z)))() / (s).B or (#(not o)).A ^ (((-(not D))).K)() <= (((-#B)).I)(), (t).D > (not {[((((-(not Q))).L)())] = (-r);[((#(not k))())] = (((-r)).D)();[(((-(not n)))())] = (((-#h)).I)();(-#(not B));((#O).n)();(-I);}) <= (((not C)).M)() + (-#e) % ((d).N)() ^ (P)() - (not m) or (#(not b))() % ((not b)).i <= (((-#B)).w)() / (((-#(not C))).A)() <= ((-D))(), (((-K)).E)() / ((-(not {(((-#(not l))).n)();(-#G);})))() * ((not j)).J or ((not J))() and (-Y) <= (#(not P))() % ((-#(not r))).p >= ((#(not r)).b)() - ((-#(not R)))() + (#(not u)).n < (H)() + (((-#x)).i)() do local function N(...) local G = #p;for s = ((#(not ((-#(not n))).b == ((not Q))() <= ((not B))() * (#p).Y)).y)() * (-(not d)) or (not d) >= (-(not o)) < ((not s)).B - ((#(not p)).f)() ^ ((#f).N)() ^ ((-x)).a, ((-Q))() or ({})() <= (#g)() or k / ((-#C))() + #(not y) <= (((-n)).t)() * Q, (((-V)).g)() and (#(function(...)return (D)(), ((#A).O)(), (#K).c, (((-(not o))).c)(), ((-(not G))).U, (((not M)).L)(), ((-#z))(); end))() and ((#G).Y)() and (g).v >= (((-#d)).Q)() ^ ((R).C)() % (#K).I == (J).k do  end;for j = #(not N) <= ((not N))() % r == (((-(not u))).t)() == (((-#(not H))).R)() or (((-(not a))).m)() <= (-q) / (#R)(), (((-(function(h, F, V, g, ...)return ((not l)).D, (((-#(not M))).w)(), ((not g))(), (L)(); end))).M)() >= (((-#(not t))).Y)() % (#K)() < (((not f)).n)() == #(not f) == (-(not M)) + #T < Z, (#G).E * ((-N)).c ^ (-#o) > (-#(not F)) % (((-W)).k)() ^ W > (((-#(not v))).n)() > (y)() do  end;if (((-u))() / (((-#(not G))).J)() ^ (((-#v)).C)() - #l and ((-#(not C))).v ^ (-(not U)) or (-#(not k)) or (((-(not k))).c)()) then  end;while (#H % (-#X) - (not n) and (-(not v)) >= ((not Y)).e / (-#(not P)) or (#(not b))() and ((-n)).G) do  end;local function K(...)  end;local function l(...)  end; end;if ((-#(not n)) or ((-#J))() or ((-O)).X * ((#(not (function(J, W, L, I, I, H, ...)return (-#(not n)), ((-w)).F; end))).n)() % ((-#(not S)))() / ((-(not N)))() ^ ((-(not f)))() - ((#(not a)).y)() + ((-Y))() + ((-e))()) then local G = ((-#(not R))).A;local function F(...)  end;local function W(...)  end;local function r(...)  end;local function l(...)  end;local Z = (#k)(); end;if (((-#F))() % (#(not N))() < ((-(function(L, p, ...)return ; end))).T % (not {(((not I)).v)();[((-(not v)))] = ((-A)).F;(((not A)).S)();[((k)())] = (((-u)).D)();((-U)).B;}) - (-(not U)) <= ((Y).c)() and ((-#(not N)))() or ((-#(not I)))() < (((-(not r))).r)() == #(not a)) then local V = ((-#(not {})))();if ((#(not #(not P) > (#(not Z))() ^ (((-#C)).e)() <= ((C).o)())).G < ((#e).u)() >= ((-#I))() <= (((-(not Z))).U)() and ((-(not P)))() < ((-#b)).R >= ((-#(not j)))() - (((-#h)).J)()) then  end;if (((#g).l)() ^ J or (#l)() % (((not E)).i)() * (((-(not m))).m)() >= #M and (#(not Y)).n == (O)()) then  end;for p = (((-#d)).A)() > (#(((not i)).m)() <= #k % (-E) % (((-(not i))).a)())() + (((-(not H))).h)() / (f).C < (((-#T)).a)() * (T)() % #(not T) ^ #V, (((-#(not F))).m)() * ((not v)).h <= #i >= V % ((Z).s)() * (#q).n or (#(not g)).c * ((-(not S)))(), (((-(not j))).o)() > (((-{})).B)() / (((not N)).P)() > #u * ((#(not n)).s)() >= (((-e)).P)() <= Q % ((-#(not c)))() do  end;if (#(not {[((#q).h)] = F;((#D).k)();}) >= (g).v / (#(not g)).d ^ ((#g).Y)() > ((-#o)).n / #r and (#(not C))() * ((not C)).Z) then  end;local V = (#(not (((not m)).J)() < (#W)() % ((-g))() ^ (((-#(not z))).J)() >= #s == (-#r))).g;if (#(function(Z, w, X, k, H, a, x, N, k, ...)return (#(not C))(), ((-(not u))).Q; end) + ((B).r)() > (not Y) >= ((-#(not p)))() * (((-#(not G))).c)() * (B).X > (E)() or (((-(not v))).U)()) then  end;while (((-(not n)))() == (-#(not p)) and (#(not e))() > ((E).n)() + ((-r))() % (((-#M)).R)() - (#(not l))() / ((-(not N))).D) do  end; end;if (((-(not n)))() > (((not (function(P, n, ...)return ((-(not N))).L, ((-#(not A))).u, (((-#y)).e)(), (-e); end))).y)() or ((-#A))() and ((#(not g)).S)() % (#(not m)).Q > ((-y))() % (N)() and ((a).r)() * ((-#(not N)))() or ((not P)).S) then while ((not X) <= ((-i)).G ^ ((#j).g)() == (((-B)).G)() > ((-l)).V * (#(not m)).L <= ((#(not H)).P)() < (#N)()) do  end;local function y(...)  end;local function C(...)  end;if (((-t))() % (#C).R + ((-(not H))).l * (((-#y)).k)() / d < ((-(not Z))).m - ((-#(not q))).I or ((-f))()) then  end;local y = ((-#(not C)))();if (((-#T))() >= ((-#(function(...)return ; end)))() - ((-#(not D)))() * (((-#(not L))).e)() > (((-#Z)).j)() >= (((-(not u))).q)() <= ((#(not r)).P)() ^ ((not Y))()) then  end; end;while (o % (#(not x))() and (#g)() + (#(not (function(B, T, T, U, W, K, ...)return (N).S, (((-#(not h))).v)(); end))).a < ((#q).F)() or (#(not s))() / #(not j) == (not D) < ((not n))() * #(not q)) do for B = ((#w).z)() % ((#H).F)() > (#i).M < (-N) == ((#v).Q)() - ((-#(not L))).R <= ((#P).R)() or (((-(not a))).z)(), (#o).v < #g == ((-h))() or #K * ((#D).s)() / (((-#(not B))).t)() - ((not h)).U + ((-#y)).Y, (-#D) % (#(not c)).C or ((-g)).n * (#B)() - (-(not q)) ^ ((not k)).w >= #w * ((-H))() do  end;local T = (#(function(X, b, ...)return ((not S)).L, (F)(), (#(not N)).m, (G).P, (-#(not Q)), (not X); end))();while ((#y).x == ((-#(not f)))() * (-(not R)) == (N).G < S - (((-#(not A))).Y)() < ((-K)).z == (((-(not N))).c)()) do  end;local function J(...)  end;local function K(...)  end;local function d(...)  end;local function Y(...)  end;local function w(...)  end; end;if (((-#(not h))).L > (-(not N)) / #(not (function(u, x, c, H, Q, P, ...)return ((-#Y)).E, (-#C), (#(not d)).z, (((-#X)).C)(), (#n).o; end)) < ((-#(function(z, A, U, z, v, z, W, W, ...)return (((-o)).O)(), ((-#u)).N, (-#K), (#(not l)).e, (#K).z, ((-#h)).Y; end))).o - (((-#v)).B)() - ((-#(not y))).n or ((-#X))() / (((-H)).b)() - (j).R % (#(not N)).X) then while (#(not a) > ((-#(not (function(N, q, r, p, ...)return ((not w))(); end))))() + ((-#(not S)))() and ((-j))() < (-#(not f)) / (((-#(not V))).X)() or (y)() == (((-#(not n))).T)()) do  end;while (((#g).Y)() < ((((-(not E)))() % (m).a * (((-#(not y))).o)() > (-N)).H)() == ((-#x)).Z <= ((-#r))() + (-#(not f)) == (#(not k)).D ^ (-(not F)) < (#(not W)).F) do  end;for h = (((-#(not n))).h)() <= (#F).s == (((not N)).j)() and (#(not d)).j >= (-#g) * #(not j) or (-(not O)) * (((-#J)).W)(), (#Y)() / (N).b % (#(not S))() or (-#c) / (-(not B)) - (#(not N)).Q > ((-#N)).j >= (#(not P))(), (((-#(not M) + ((#(not W)).L)() / D / (-(not L)))).f)() - (((-(not (function(O, u, ...)return (-#(not d)), ((-(not j)))(), ((-#O)).c, ((#h).M)(), l, ((#(not S)).c)(), ((#(not b)).A)(), (-#T); end)))).w)() % n > (#j)() < (((-#(not H))).u)() - X / (((-#o)).H)() <= ((-#x)).o do  end;local function P(...)  end;while (((not O))() % (#(not J)).q >= ((-#K)).z % ((-#(not U)))() - (not Y) <= (((not d)).K)() + ((-#(not Z)))() < (#e).X) do  end;while ((not S) >= (not (function(E, a, x, K, l, J, D, W, ...)return (#P).A, ((-c)).f, ((not W)).g, q, ((-(not B)))(), (((-R)).R)(), (#(not a)).l, ((f).h)(); end)) + ((not T)).O / ((-(not h))).W % ((#Z).W)() <= (#(not g))() * ((#P).P)() / (-#(not N))) do  end;while ((#(not J))() and #(not E) <= ((-#(not O)))() and ((not T)).D / (((-(not S))).Q)() < (((-#(not J))).t)() - #i - (u).V) do  end; end;local d = (#(not w))();local B = ((-(not j)))();if (((-(not b))).y % ({#(not i);}).l + (-O) / (((not j)).J)() ^ ((-h))() % ((#(not J)).q)() * ((-#f))() % (((not c)).h)() or (((-#(not D))).X)() - ((#T).S)()) then for e = (((-(not (function(n, ...)return (#Z)(), (#o)(), (((-#(not g))).Y)(), (((-#n)).Z)(), (#O)(), ((-#(not d)))(), ((-(not w))).T; end)))).B)() % ((not {[((((not m)).n)())] = ((J).Y)();(#Z)();[(((not j)).Q)] = ((not n)).E;})).x == (t).b + (b)() == ((-#f))() < ((-#Z))() + ((#L).q)() ^ (#c)(), ((#E).Q)() % (-z) / ((not C)).Z % (-(not L)) * ((-(not D))).u + #(not E) % ((not u))() and ((not R)).T, ((-(not (#(not r))() + (((-(not a))).M)() / ((n).L)() or (-#(not o)))))() * ((-(not B)))() % ((not t))() - (-(not m)) > (#S).F * #i ^ ((d).F)() ^ ((-#V)).G do  end;if ((not z) ^ ((not x)).c > (not o) ^ ((-(not k))).h and ((#(not c)).z)() + (((-#(not B))).g)() < (((-#N)).X)() + (#(not T)).L) then  end;if (((not {[((#K)())] = (#(not G)).X;((-#s)).C;})).U and ((-{(y)();}))() - (Q)() < (O).y + ((-#Y)).S ^ ((not g)).h * (((-#d)).O)() and ((-#(not J))).t) then  end;while ((((not ((#(not l)).p)() <= (not N) < (#(not U))() == #M)).r)() * (((-(not N))).O)() / ((-(not I))).b <= (((-q)).r)() or (-#(not C)) % ((-(not y))).d ^ (#(not b)).x - ((-#(not S)))()) do  end;local function r(...)  end;if (((not s)).B % (#(not V))() ^ (-(not r)) * R or ((not n)).U >= (((-o)).d)() ^ ((-#(not B))).J ^ (-R)) then  end; end; end;  end; end;   local CHECKMark = string.reverse('45f922UTyz/gg.drocsid//:sptth | A.0.5 rotacsufbO USP gnisu detacsufbo saw elif sihT') local F = (V91 + V165); local G, Dictionary = ({}), ({}); for H = V0, F - V1 do local Value = Character(H); G[H] = Value; Dictionary[H] = Value; Dictionary[Value] = H; end; local ByteString, Position = (function(ByteString) local X, Y, Z = Byte(ByteString, V1, V3); if ((X + Y + Z) ~= V248) then PrimaryXORKey = PrimaryXORKey + V228; F = F + V66; end; ByteString = SubString(ByteString, V5);  local C, D, E = (""), (""), ({}); local I = V1; local function K() local L = ToNumber(SubString(ByteString, I, I), (0x024)); I = I + V1; local M = ToNumber(SubString(ByteString, I, I + L - V1), ((#{0x270;929;0x09A;(function(...)return 750,994,0x1ED,...;end)()} + 0x01E))); I = I + L; return (M); end; C = Dictionary[K()]; E[V1] = C; while (I < #ByteString) do local N = K(); if G[N] then D = G[N]; else D = C .. SubString(C, V1, V1); end; G[F] = C .. SubString(D, V1, V1); E[#E + V1], C, F = D, D, F + V1; end; return (Concatenate(E)); end)("PSU|"), (V91 - ((#{0x351;0x1CD;0x2DC;763;(function(...)return 25,0x081,442,...;end)(0x2B3,0x18F,562)} + 0x050)));local function CalculateVM(Index, Value, ...)if (Index == 868063620) then return (((BitXOR(BitXOR(Value, 755821), 478788)) - 394671) - 632491);elseif (Index == 713722921) then return (BitXOR(((BitXOR(Value, 26431)) - 123761) - 20547, 627577));elseif (Index == 183744954) then return ((BitXOR(BitXOR(BitXOR(BitXOR(Value, 620317), 764660), 406937), 934301)) - 503798);elseif (Index == 829882486) then return ((BitXOR(((Value) - 157593) - 26039, 500220)) - 181651);elseif (Index == 298805871) then return (((BitXOR((Value) - 18659, 390055)) - 79034) - 951519);elseif (Index == 520745196) then return ((((((Value) - 54419) - 564904) - 582114) - 564828) - 383263);elseif (Index == 672600792) then return (BitXOR(BitXOR((BitXOR((Value) - 553062, 756716)) - 743944, 686031), 156421));else end; end;local V3 = T["AHdX6L"];  local V0 = T[((182801545 - #("sussy")))];  local V2 = T["dP11UzsRu"];  local V256 = T[(216589466)];  local V16777216 = T[(253895843)];  local V4 = T["unUoP1p"];  local V1 = T[((#{575;0x318;163;(function(...)return 390,0x29C,0x2D5,0x361,...;end)(834,963,588,414)} + 64745082))];  local V65536 = T[(0x44DD734)];      local function gBits8() local F = BitXOR(Byte(ByteString, Position, Position), PrimaryXORKey); PrimaryXORKey = F % V256; Position = (Position + V1); return (F); end; local function gBits16() local W, X = Byte(ByteString, Position, Position + V2); W = BitXOR(W, PrimaryXORKey); PrimaryXORKey = W % V256; X = BitXOR(X, PrimaryXORKey); PrimaryXORKey = X % V256; Position = Position + V2; return ((X * V256) + W); end; local function gBits32() local W, X, Y, Z = Byte(ByteString, Position, Position + V3); W = BitXOR(W, PrimaryXORKey); PrimaryXORKey = W % V256; X = BitXOR(X, PrimaryXORKey); PrimaryXORKey = X % V256; Y = BitXOR(Y, PrimaryXORKey); PrimaryXORKey = Y % V256; Z = BitXOR(Z, PrimaryXORKey); PrimaryXORKey = Z % V256; Position = Position + V4; return ((Z * V16777216) + (Y * V65536) + (X * V256) + W); end; local function gBit(Bit, Start, End) if (End) then local R = (Bit / V2 ^ (Start - V1)) % V2 ^ ((End - V1) - (Start - V1) + V1); return (R - (R % V1)); else local P = V2 ^ (Start - V1); return (((Bit % (P + P) >= P) and (V1)) or(V0)); end; end;  local Mode = ""..T['e1fZcM']; local function _R(...) return ({...}), Select(Mode, ...); end;local function Deserialize(...) local V2047 = T[((#{0x018;(function(...)return ...;end)()} + 72558883))];  local V10 = T[((#{0x178;0x22E;540;(function(...)return 0x0F5,570;end)()} + 0x1D45D788))];  local V7 = T[(388548742)];  local V851334 = T[((#{148;} + 330431549))];  local V4 = T.unUoP1p;  local V7512 = T["e0uVEXOq"];  local V6 = T.ULSyn0;  local V5 = T[(9843933)];  local V32 = T[((85525100 - #("you are going to the backrooms")))];  local V256 = T[(216589466)];  local V52 = T["tn2ev"];  local V8 = T[((665249133 - #("You: print(oy) PSU: return  ,jaj, szeretem a fÃ©rfiakat, akik nem hazudnakà¨¯à© à¨®à©à¨ à¨®à¨°à¨¦à¨¾à¨ à¨¨à©à©° à¨ªà¨¿à¨à¨° à¨à¨°à¨¦à¨¾ à¨¹à¨¾à¨ à¨à©à¨  à¨¨à¨¹à©à¨ à¨¬à©à¨²à¨£à¨¾Ð»ÐµÑ Ñ Ð»ÑÐ±Ð»Ñ Ð¼ÑÐ¶ÑÐ¸Ð½ Ð½Ðµ Ð±ÑÐ´Ñ Ð²ÑÐ°ÑÑyo tÃ´i yÃªu ÄÃ n Ã´ng sáº½ khÃ´ng nÃ³i dá»iØ£ÙØª Ø£Ø­Ø¨ Ø§ÙØ±Ø¬Ø§Ù ÙÙ ÙÙØ°Ø¨")))];  local V5000 = T[((#{0x252;103;} + 511898863))];  local V0 = T[((182801562 - #("Freerobuxnoscam!1!.com")))];  local V20 = T[(745648521)];  local V26 = T['ACi5NkB'];  local V2 = T['dP11UzsRu'];  local V1 = T[((#{} + 0x3DBEE85))];  local V28 = T[((#{24;0x03B;(function(...)return ...;end)(0x29E,876,951,0x13B)} + 361006678))];  local V3 = T.AHdX6L;  local V21 = T[((624493862 - #("John 7:24 NIV - Stop judging by mere appearances, but instead judge correctly.")))];  local V91860 = T[((586831420 - #("You: print(oy) PSU: return  ,jaj, szeretem a fÃ©rfiakat, akik nem hazudnakà¨¯à© à¨®à©à¨ à¨®à¨°à¨¦à¨¾à¨ à¨¨à©à©° à¨ªà¨¿à¨à¨° à¨à¨°à¨¦à¨¾ à¨¹à¨¾à¨ à¨à©à¨  à¨¨à¨¹à©à¨ à¨¬à©à¨²à¨£à¨¾Ð»ÐµÑ Ñ Ð»ÑÐ±Ð»Ñ Ð¼ÑÐ¶ÑÐ¸Ð½ Ð½Ðµ Ð±ÑÐ´Ñ Ð²ÑÐ°ÑÑyo tÃ´i yÃªu ÄÃ n Ã´ng sáº½ khÃ´ng nÃ³i dá»iØ£ÙØª Ø£Ø­Ø¨ Ø§ÙØ±Ø¬Ø§Ù ÙÙ ÙÙØ°Ø¨")))];  local V1023 = T[((624711324 - #("yes ruqen i agree")))];  local V12 = T.ir2oL6rGm7;  local V31 = T[((#{141;0x3BA;101;640;} + 732995883))];     do local function _(...) if ((W).t > ((-#L))() <= ((-F))() < (not h) + ((-#(not (function(h, p, K, ...)return (#g).q; end)))).n + #r < (((-#(not T))).r)() and ((-#(not s))).g + ((-X)).H / ((-#(not n))).n <= ((-#(not G))).f < ((-p)).t) then while ((((-#(not y))).F)() ^ (#O).c <= ((-#{((-#(not E))).j;Q;}))() == (((-#(not e))).k)() < (A)() % (((-(not s))).i)() > ((-m)).g - (((-(not s))).L)() ^ (-C) and ((-T))()) do local B = (#P).U;local function Y(...)  end;if (((m).q)() % (#(not S)).N / (((-L)).w)() - ((#(not Y)).S)() - (F).f and ((-#j))() > ((-T))() + ((#(not R)).x)()) then  end;if (#{#U;n;[(((-(not U)))())] = ((-v)).U;#(not k);((-#(not h)))();(#C)();(#(not F)).Y;} / ((#(function(l, P, t, ...)return ((-(not I)))(), (#(not u)).e; end)).e)() == (-P) or (-#o) % ((-#(not P)))() >= ((-#G))() / ((-#(not C)))() >= (#(not V)).L) then  end;local function b(...)  end;local function Z(...)  end; end;if ((-(not u)) % (-#c) ^ ((#(not q)).I)() <= ((-#(not E))).p <= ((-#(not P)))() + (#(not l))() % ((-#(not v))).m <= ((#(not n)).t)() and (#(not W)).z ^ (-(not y))) then while (((-#(not e)))() or ((not N))() + ((#N).y)() ^ (((-#O)).d)() and ((-#P))() <= (-#A) % ((not G)).g - (#(not P))()) do  end;local function R(...)  end;if (((not I)).z > (-#(not R)) / #e * (((-(not u))).P)() == (((-#(not O))).k)() == (n).A + (((-#W)).i)() / (((-#t)).r)()) then  end;for R = ((#(not S)).g)() and (#(not ((-G)).l and ((-R)).c * P == (#(not R)).D)).l == (-#R) + ((-(not I)))() ^ (#s)() or (not c) or (((-i)).N)() * #(not j), ((not (function(...)return ((-#x))(), (-r), (k).r, ((-#(not y))).Y, ((-D))(), (((-#(not e))).d)(), ((#(not v)).D)(); end))).o / ((-#n))() > (-#U) <= ((-#H))() and (((not G)).O)() <= ((-#(not p))).Q > ((#(not t)).K)() == ((-#(not A)))(), ((J).F)() % (#(not v))() >= (#(not v)).j >= (((-#(not I))).l)() >= #R and (X).d < ((g).J)() <= ((not A))() do  end;local q = (((-#(not R))).w)();if ((-#(not {[((#m).J)] = N;(-(not J));((#(not W)).D)();})) / (-#g) or (not Q) * (not d) / n > ((not y)).U <= (((not f)).B)() - (not t)) then  end;while (g % (#(function(b, m, T, u, I, n, I, r, I, ...)return (-K), (#i)(), (((-(not I))).a)(), M, ((-#c))(), #(not I), ((-Z))(); end)).K - (((-N)).D)() >= (t).f - ((not W)).n ^ (#S).v <= h > (U)()) do  end; end;while ((#y).X * (((-(not w))).E)() >= (((not O)).z)() ^ ((-#((-I)).A - (#N).c == ((-w))() == ((-(not W))).j)).x % ((-z))() / ((-#(not Q)))() >= #d - ((-x)).b ^ (-#i) * ((-#(not W))).n) do if ((#(not k))() < (#(not {s;[(((k).F)())] = ((-s)).v;[((#(not B)).k)] = (((-#(not i))).X)();[((#U).q)] = ((not H))();})).E * ((not H))() and (((-(not X))).K)() - q or (-#x) ^ (((-#(not m))).A)() and ((-N))()) then  end;local function a(...)  end;while ((#C)() ^ ((-#(not (function(U, e, o, ...)return ((-u)).X, ((-#x))(), ((-#(not o))).O, (((not n)).z)(), (((-#Y)).K)(), (((not A)).I)(), (-A); end))))() > ((#e).u)() * ((m).q)() < (((not g)).X)() < (((-Y)).W)() % ((-n)).p + (#(not C)).Y) do  end;for x = ((-(not (function(N, k, b, V, z, t, O, ...)return #g, ((not T)).R, (r).x, (((-J)).e)(); end))))() or ((#e).K)() + ((#(not v)).A)() - (((-#(not F))).b)() >= (((not a)).k)() > ((-Z)).G == ((-(not E))).O * ((#(not N)).T)(), (#(not p))() or ((-#((not Q)).E and (((-#(not o))).B)() ^ (((not a)).J)() ^ ((#(not O)).Y)()))() % T == ((-#(not g)))() and ((-a)).S + #A > (#(not a)).J / ((-#(not e)))(), (((-#z)).v)() == ((-x)).r ^ (((-#(not A))).W)() >= ((o).n)() + ((a).W)() ^ (((not j)).E)() <= (#t)() ^ ((#l).J)() do  end;local function M(...)  end;for K = ((not r)).f + ((-#M))() * (((-#r)).m)() + ((#b).Z)() or ((#(not q)).l)() * (((-#a)).J)() % (((-t)).w)() + ((-(not q))).y, ((-#(not I)))() >= (((-#(not {#J;[((((-Z)).s)())] = (-(not a));}))).o)() == (t)() > ((#(not y)).e)() * (#f).O * (#M)() >= #(not i) % #p, ((-#F)).Q == ((-o))() or (-a) < (((-#p)).U)() + (((-(not N))).K)() % (-a) ^ ((n).h)() - ((-#(not S))).Q do  end;local function n(...)  end;for q = M + ((-(not n))).h % #z > ((v).J)() or (((-I)).q)() <= ((-#(not P)))() % (-#n) < (((-#(not u))).t)(), #(not v) > (not M) < (((-#(not a))).D)() < ((q).S)() < (#(not F)).K / (((-#(not i))).K)() > (#(not X)).L == (((not a)).k)(), (((-(not (-t) * ((#e).Y)() * ((-#(not u))).z * ((-q))()))).S)() / ((-(not h))).a > ((-(not a)))() >= (((-#(not A))).q)() > (-#O) and (#h).k < ((-X))() and (((-#(not S))).X)() do  end; end;if ((L)() * (#(not u))() or ((-#(not F))).d % (((-a)).c)() or Z == #r and (-(not J)) - (not y) < ((not Z)).V < ((-#R)).i) then local J = #(not S);local function g(...)  end;local function x(...)  end;if (((-(function(D, n, t, s, z, n, X, x, j, ...)return ((not F)).n, (#U).y, (((-(not z))).H)(), (((-#u)).C)(), ((-u))(), (((-(not K))).w)(); end))).Y - (b)() == ((-(not x)))() ^ ((-#v)).Z * (#(not x)).f or #T or ((-(not z))).g < ((not f)).Q) then  end; end;while (#(not (function(n, w, w, w, r, k, ...)return ((-w)).b, ((M).z)(), #(not D), (-#(not D)), (((-n)).f)(), ((-#c))(), ((not w)).t, (-(not O)), #G; end)) or (-(not ((-g)).a == (-#R) or (#O).N == ((-(not w))).T >= (((-c)).P)() + (((-#C)).O)())) ^ (-(not l)) < (-#b) >= (#(not F))() == ((-#Q))() < (-J) < (t).m * ((not B))() and (not y)) do local p = ((function(A, r, ...)return (((not N)).I)(), ((-(not f)))(), (-(not g)), (-#w), (((-#a)).B)(), #M; end))();for P = (#(not (function(V, E, Q, b, ...)return ((-#f))(), (-(not X)), ((not E)).I; end))).J - (-#x) + (((-#p)).M)() + (((-X)).T)() * F or (R).Y > ((-#z)).A % ((not o)).J, (#(not b)).w + ((-(function(Z, C, I, ...)return (#Z).c, (v).u, (#T).X; end))).T * ((-#(not d))).z and ((k).K)() - ((#(not p)).v)() < (((-#l)).l)() ^ (F)() + (-n), (-#C) * ((not p))() or (((-(not q))).n)() ^ ((-#(not p)))() + #(not p) ^ (#(not m))() + ((#(not A)).f)() and ((-g))() do  end;local function r(...)  end;for S = ((-((O).g)() + ((#A).q)() ^ ((not y)).g < ((-(not I)))()))() > ((#u).d)() <= (-#Z) % (u).e > (#B)() == ((not N)).B - ((-#(not x)))() / (-#(not m)), (-{(((not M)).S)();[((D)())] = (D)();}) + (#A)() * ((#r).S)() ^ #(not b) + ((not J)).h or ((-#C))() % #p >= ((#(not n)).R)(), (((-r)).i)() / ((not g)).f > ((not X))() < (not O) % (not p) / ((-(not a)))() == l + (#(not d))() do  end;local e = ((-#t)).C;while (Z > ((-#p))() == (((-#(not K))).y)() - ((not j))() > #Z * ((not R))() > (h).U <= ((-#(not q))).F) do  end;while ((((-(function(...)return (-(not a)), (((-#(not S))).I)(), (((-#(not X))).g)(), ((#r).x)(), ((-#(not N))).x, (-#j), ((-#(not N))).Y; end))).I)() / #((-#(not V))).F ^ (((-#(not l))).K)() <= ((F).U)() or (((-(not A))).t)() * ((-#t))() or ((-#(not H))).g < ((p).k)() > (#(not w)).g - ((e).t)() > (W).K) do  end; end;local function V(...) while (((not I))() >= ((-#(not S)))() - (A).R - ((not L)).t == #g / (((not A)).I)() < ((-D))() % ((not V)).b) do  end;while (((-#W)).L < (-#p) < ((-q))() + (#(not Q))() >= (-#x) ^ (V)() / (p).B / (((-W)).V)()) do  end;local function L(...)  end;local H = Z;if ((((not {((-(not H)))();[((-#K))] = (#(not G)).I;[(((-#(not G)))())] = ((-#g)).c;(#V).L;})).y)() and #t == h and (((not o)).R)() / (#(not N)).i <= (#i).c and ((-J))() and r) then  end;local X = ((-#(not N)))(); end;local t = (#{[(#t)] = (-#V);(#(not m)).i;[((#(M).C > (((-#(not J))).J)() <= (#V)() ^ (-#(not w)))())] = (#B).w;}).s; end;  end; end;     local function Deserialize(...)  	local Functions = ({}); 	local Constants = ({}); 	local Instructions = ({});  			  							for Index = V0, gBits32(PrimaryXORKey) - V1, V1 do 								local Type = gBits8(PrimaryXORKey);  								if (Type == V26) then  									local Bool = gBits8(PrimaryXORKey); 									Constants[Index] = (Bool ~= V0);  								elseif (Type == V28) then  									while (true) do 										local Left = gBits32(PrimaryXORKey); 										local Right = gBits32(PrimaryXORKey); 										local IsNormal = V1; 										local Mantissa = (gBit(Right, V1, V20) * (V2 ^ V32)) + Left; 										local Exponent = gBit(Right, V21, V31); 										local Sign = ((-V1) ^ gBit(Right, V32)); 										if (Exponent == V0) then 											if (Mantissa == V0) then 												Constants[Index] = (Sign * V0); 												break; 											else 												Exponent = V1; 												IsNormal = V0; 											end; 										elseif(Exponent == V2047) then 											Constants[Index] = (Mantissa == V0) and (Sign * (V1 / V0)) or (Sign * (V0 / V0)); 											break; 										end; 										Constants[Index] = LDExp(Sign, Exponent - V1023) * (IsNormal + (Mantissa / (V2 ^ V52))); 										break; 									end; elseif (Type == V12) then 									while (true) do  		 								if PSU_CHECKMARK ~= CHECKMark then break end  local Length = gBits32(PrimaryXORKey); 										Constants[Index] = SubString(ByteString, Position, Position + Length - V1); 										Position = Position + Length;  										break; 									end; elseif (Type == V10) then  									while (true) do 										if PSU_CHECKMARK ~= CHECKMark then break end  local Length = gBits32(PrimaryXORKey); 										if (Length == V0) then Constants[Index] = (''); break; end;  										if (Length > V5000) then 											local Constant, ByteString = (''), (SubString(ByteString, Position, Position + Length - V1)); 											Position = Position + Length; 											for Index = V1, #ByteString, V1 do local Byte = BitXOR(Byte(SubString(ByteString, Index, Index)), PrimaryXORKey); PrimaryXORKey = Byte % V256; Constant = Constant .. Dictionary[Byte]; end; 											Constants[Index] = Constant; 										else 											local Constant, Bytes = (''), ({Byte(ByteString, Position, Position + Length - V1)}); 											Position = Position + Length; 											for Index, Byte in Pairs(Bytes) do local Byte = BitXOR(Byte, PrimaryXORKey); PrimaryXORKey = Byte % V256; Constant = Constant .. Dictionary[Byte]; end; 											Constants[Index] = Constant; 										end;  										break; 									end; 								else                                     Constants[Index] = nil 								end; 							end;  							local Count = gBits32(PrimaryXORKey); 							for Index = V0, Count - V1, V1 do Instructions[Index] = ({}); end;  							for Index = V0, Count - V1, V1 do 								local InstructionData = gBits8(PrimaryXORKey); 								if (InstructionData ~= V0) then 									InstructionData = InstructionData - V1; 									local C, Enum, D, B, A, E = V0, V0, V0, V0, V0, V0; 									local InstructionType = gBit(InstructionData, V1, V3);  							if (InstructionType == V0) then  Enum = (gBits8(PrimaryXORKey)); B = (gBits16(PrimaryXORKey)); C = (gBits16(PrimaryXORKey)); A = (gBits16(PrimaryXORKey)); elseif (InstructionType == V2) then  Enum = (gBits8(PrimaryXORKey)); B = Instructions[(gBits32(PrimaryXORKey))]; A = (gBits16(PrimaryXORKey)); elseif (InstructionType == V6) then  elseif (InstructionType == V1) then  Enum = (gBits8(PrimaryXORKey)); B = (gBits32(PrimaryXORKey)); A = (gBits16(PrimaryXORKey)); elseif (InstructionType == V3) then  Enum = (gBits8(PrimaryXORKey)); B = Instructions[(gBits32(PrimaryXORKey))]; C = (gBits16(PrimaryXORKey)); A = (gBits16(PrimaryXORKey)); elseif (InstructionType == V5) then  Enum = (gBits8(PrimaryXORKey)); B = (gBits32(PrimaryXORKey)); C = (gBits16(PrimaryXORKey)); A = (gBits16(PrimaryXORKey)); D = ({}); for Index = V1, C, V1 do D[Index] = ({[V0] = gBits8(PrimaryXORKey), [V1] = gBits16(PrimaryXORKey)}); end;  end;  							if (gBit(InstructionData, V6, V6) == V1) then C = Constants[C]; end; if (gBit(InstructionData, V8, V8) == V1) then E = Instructions[gBits32(PrimaryXORKey)]; else E = Instructions[Index + V1]; end; if (gBit(InstructionData, V4, V4) == V1) then A = Constants[A]; end; if (gBit(InstructionData, V5, V5) == V1) then B = Constants[B]; end;  							if (gBit(InstructionData, V7, V7) == V1) then D = ({}); for Index = V1, gBits8(), V1 do D[Index] = gBits32(); end; end;  							local Instruction = Instructions[Index];  							Instruction["B1DkBML2TV"] = E; Instruction['VP0LSWxT0'] = Enum; Instruction["tBO"] = A; Instruction[-36669.79533868041] = D; Instruction[V851334] = C; Instruction[-V7512] = B; end; end; 	local ParameterCount = gBits8(PrimaryXORKey);  	local StackSize = gBits16(PrimaryXORKey);  	for Index = V0, gBits32(PrimaryXORKey) - V1, V1 do Functions[Index] = Deserialize(); end;   	return ({ 	[-631875.5757732701] = StackSize; 	["A9uHr"] = V0; 	[-V91860] = Instructions; 	['On8HMu'] = ParameterCount; 	["g06XM"] = Functions; 	['LqYYcgd70Q'] = Constants; 	});  end;    return (Deserialize(...)); end;    local function Wrap(Chunk, UpValues, Environment, ...)  		local Functions = Chunk["g06XM"]; 	local Constants = Chunk["LqYYcgd70Q"]; 	local InitialInstructionPoint = 0; 	local ParameterCount = Chunk["On8HMu"]; 	local Instructions = Chunk[-91860]; 	local StackSize = Chunk[-631875.5757732701];  	return (function(...)  				local PCount = (Select(Mode, ...) - 1); 		local lUpValues = ({}); 		local VarArg = {}; 		local Top = -(1); 		local VMKey = (542170762); 		local OP_D = -36669.79533868041; 		local OP_E = "B1DkBML2TV"; 		local OP_ENUM = 'VP0LSWxT0'; 		local InstructionPoint = Instructions[InitialInstructionPoint]; 		local OP_C = 851334; 		local Stack = {}; 		local Arguments = {...}; 		local DecryptConstants = (true); 		local OP_A = 'tBO'; 		local OP_B = -7512;  		for Index = 0, PCount, 1 do 			if (Index >= ParameterCount) then 				VarArg[Index - ParameterCount] = Arguments[Index + 1]; 			else 				Stack[Index] = Arguments[Index + 1]; 			end; 		end;  		local VarArgs = PCount - ParameterCount + 1;  		while (true) do             if PSU_CHECKMARK ~= CHECKMark then break end  			local Instruction = InstructionPoint; 			local Enum = Instruction[OP_ENUM]; 			InstructionPoint = Instruction[OP_E];if (Enum <= 20) then if (Enum <= 9) then if (Enum <= 4) then if (Enum <= 1) then if (Enum > 0) then if (Stack[Instruction[OP_A]] ~= Instruction[OP_C]) then InstructionPoint = Instruction[OP_B]; end;elseif (Enum < 1) then  local A = Instruction[OP_A]; do return Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])) end;end;elseif (Enum <= 2) then for Index = Instruction[OP_A], Instruction[OP_B] do Stack[Index] = (nil); end;elseif (Enum == 3) then local A = Instruction[OP_A]; local Step = Stack[A + 2]; local Index = Stack[A] + Step; Stack[A] = Index; if (Step > 0) then if (Index <= Stack[A + 1]) then InstructionPoint = Instruction[OP_B]; Stack[A + 3] = Index; end; elseif (Index >= Stack[A+1]) then InstructionPoint = Instruction[OP_B]; Stack[A + 3] = Index; end;elseif (Enum <= 4) then Stack[Instruction[OP_A]] = #Stack[Instruction[OP_B]];end;elseif (Enum <= 6) then if (Enum == 5) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] * Stack[Instruction[OP_C]];elseif (Enum <= 6) then do return (Stack[Instruction[OP_A]]); end;end;elseif (Enum <= 7) then do return; end;elseif (Enum == 8) then Stack[Instruction[OP_A]] = Wrap(Functions[Instruction[OP_B]], (nil), Environment);elseif (Enum <= 9) then Stack[Instruction[OP_A]] = Instruction[OP_B];end;elseif (Enum <= 14) then if (Enum <= 11) then if (Enum == 10) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]];elseif (Enum <= 11) then local A = Instruction[OP_A]; Stack[A] = Stack[A](Stack[A + 1]); for I = A + 1, StackSize do Stack[I] = nil; end;end;elseif (Enum <= 12) then Stack[Instruction[OP_A]] = Create(Instruction[OP_B]);elseif (Enum == 13) then local A = Instruction[OP_A]; Stack[A] = 0 + (Stack[A]); Stack[A + 1] = 0 + (Stack[A + 1]); Stack[A + 2] = 0 + (Stack[A + 2]); local Index = Stack[A]; local Step = Stack[A + 2]; if (Step > 0) then if (Index > Stack[A + 1]) then InstructionPoint = Instruction[OP_B]; else Stack[A + 3] = Index; end; elseif (Index < Stack[A + 1]) then InstructionPoint = Instruction[OP_B]; else Stack[A + 3] = Index; end;elseif (Enum <= 14) then local A = Instruction[OP_A]; local B = Instruction[OP_B]; local Offset = 50 * (Instruction[OP_C] - 1); local T = Stack[A]; local Count = 0; for Index = A + 1, B do T[Offset + Count + 1] = Stack[A + (Index - A)]; Count = Count + 1; end;end;elseif (Enum <= 17) then if (Enum <= 15) then Stack[Instruction[OP_A]] = Instruction[OP_B] * Stack[Instruction[OP_C]];elseif (Enum == 16) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] + Instruction[OP_C];elseif (Enum <= 17) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]];end;elseif (Enum <= 18) then Stack[Instruction[OP_A]] = Instruction[OP_B] + Stack[Instruction[OP_C]];elseif (Enum == 19) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Stack[Instruction[OP_C]]];elseif (Enum <= 20) then local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Top)); for I = A + 1, Top do Stack[I] = nil; end;end;elseif (Enum <= 30) then if (Enum <= 25) then if (Enum <= 22) then if (Enum == 21) then if (Stack[Instruction[OP_A]] == Instruction[OP_C]) then InstructionPoint = Instruction[OP_B]; end;elseif (Enum <= 22) then if (Stack[Instruction[OP_A]] ~= Stack[Instruction[OP_C]]) then InstructionPoint = Instruction[OP_B]; end;end;elseif (Enum <= 23) then local A = Instruction[OP_A]; local Results, Limit = _R(Stack[A](Stack[A + 1])); Top = Limit + A - 1; local K = 0; for I = A, Top do K = K + 1; Stack[I] = Results[K]; end;elseif (Enum == 24) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] / Instruction[OP_C];elseif (Enum <= 25) then local B = Instruction[OP_B]; local Result = Stack[B]; for Index = B + 1, Instruction[OP_C] do Result = Result .. Stack[Index]; end; Stack[Instruction[OP_A]] = Result;end;elseif (Enum <= 27) then if (Enum > 26) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]];elseif (Enum < 27) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]];end;elseif (Enum <= 28) then InstructionPoint = Instruction[OP_B];elseif (Enum > 29) then Stack[Instruction[OP_A]] = (Instruction[OP_B] ~= 0);elseif (Enum < 30) then  if (Stack[Instruction[OP_A]]) then InstructionPoint = Instruction[OP_B]; end;end;elseif (Enum <= 35) then if (Enum <= 32) then if (Enum > 31) then Stack[Instruction[OP_A]] = Create(256);elseif (Enum < 32) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] - Stack[Instruction[OP_C]];end;elseif (Enum <= 33) then Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]];elseif (Enum > 34) then local A = Instruction[OP_A]; do return UnPack(Stack, A, Top); end;elseif (Enum < 35) then  UpValues[Instruction[OP_B]] = Stack[Instruction[OP_A]];end;elseif (Enum <= 38) then if (Enum <= 36) then local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end;elseif (Enum == 37) then local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end;elseif (Enum <= 38) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] % Instruction[OP_C];end;elseif (Enum <= 39) then local Function = Functions[Instruction[OP_B]]; local fUpValues = Instruction[OP_D]; local Indexes = {}; local nUpValues = SetMetaTable({}, { __index = function(_, Key) local UpValue = Indexes[Key]; return (UpValue[1][UpValue[2]]); end, __newindex = function(_, Key, Value) local UpValue = Indexes[Key]; UpValue[1][UpValue[2]] = Value; end; }); for Index = 1, Instruction[OP_C], 1 do local UpValue = fUpValues[Index]; if (UpValue[0] == 0) then Indexes[Index - 1] = ({ Stack, UpValue[1] }); else Indexes[Index - 1] = ({ UpValues, UpValue[1] }); end; lUpValues[#lUpValues + 1] = Indexes; end; Stack[Instruction[OP_A]] = Wrap(Function, nUpValues, Environment);elseif (Enum > 40) then Stack[Instruction[OP_A]][Stack[Instruction[OP_B]]] = Stack[Instruction[OP_C]];elseif (Enum < 41) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] + Stack[Instruction[OP_C]];end;  					end; 				end); 			end;  			  			return Wrap(Deserialize(), {}, GetFEnv())(...);  end)(({[((#{255;936;0x212;0x2F4;} + 833865676))]=("\97");[((#{0x0BC;0x357;0x245;(function(...)return 782;end)()} + 0x2BB0A12B))]=(((#{683;372;} + 0x01D)));[(0x25E6D3EE)]=("\101");[(0x2B26039A)]=((481403644));[((#{(function(...)return 0x007,0x18D;end)()} + 0x5F79943))]=((91));[((210927525 - #("balls")))]=(((#{0x33B;321;(function(...)return ;end)()} + 0x0E2)));['AHdX6L']=((0x003));["Vhu8wIBW"]=(((#{(function(...)return 0x119,...;end)(0x1A9,844,548,294)} + 443243259)));[(0x1A6B5B00)]=("\104");[(0xE3AE960)]=("\108");[((996886844 - #("free sex for free?")))]=(((635884532 - #("retard"))));[((#{0x059;545;} + 0x1772F32D))]=("\116");["Yhhfz"]=("\107");[(171030940)]=((0x024));[(64745093)]=(((6 - #("1+1=3"))));[((#{0x183;706;59;} + 0xC3A9D8))]=("\98");[(388548742)]=(((#{(function(...)return 0x01B;end)()} + 0x006)));[((#{581;530;0x126;0x1C8;(function(...)return 0x19C;end)()} + 0x344F186F))]=("\112");[(0x1D45D78D)]=(((217 - #("You: print(oy) PSU: return  ,jaj, szeretem a fÃ©rfiakat, akik nem hazudnakà¨¯à© à¨®à©à¨ à¨®à¨°à¨¦à¨¾à¨ à¨¨à©à©° à¨ªà¨¿à¨à¨° à¨à¨°à¨¦à¨¾ à¨¹à¨¾à¨ à¨à©à¨  à¨¨à¨¹à©à¨ à¨¬à©à¨²à¨£à¨¾Ð»ÐµÑ Ñ Ð»ÑÐ±Ð»Ñ Ð¼ÑÐ¶ÑÐ¸Ð½ Ð½Ðµ Ð±ÑÐ´Ñ Ð²ÑÐ°ÑÑyo tÃ´i yÃªu ÄÃ n Ã´ng sáº½ khÃ´ng nÃ³i dá»iØ£ÙØª Ø£Ø­Ø¨ Ø§ÙØ±Ø¬Ø§Ù ÙÙ ÙÙØ°Ø¨"))));[((#{269;489;817;(function(...)return 266,0x243,0x119,0x2C3,...;end)(0x359,411,0x25A)} + 0x277EE7D7))]=("\114");[(0xCE8E49A)]=(((275 - #("REALLLLLL psu?!!!!!"))));[(555503199)]=(((#{970;(function(...)return 491;end)()} + 0x082)));[(182801540)]=((0));['ULSyn0']=(((#{469;121;} + 0x004)));[((960102906 - #("require")))]=(((#{680;814;0x379;896;(function(...)return 201,932;end)()} + 0xC3A9D5)));["tGamDapp"]=((238741856));[(420443118)]=(((#{514;} + 600743870)));[((342429278 - #("epic embed fail")))]=("\117");[((45110707 - #("for i,v in pairs(game) do hack() end")))]=((432617914));[(0x2DE06754)]=("\110");[(0x9634DD)]=(((#{0x0EA;409;71;0x03F;(function(...)return 0x00C,0x27B,...;end)(0x141,0x13F)} - 0x003)));[(0x22FA556D)]=((0x166D4));[(0x3B80AC8F)]=((248));[(0xD72F261)]=(((662628339 - #("What about n word?"))));[(690947168)]=(((126 - #("for i,v in pairs(game) do hack() end"))));[((#{0x076;0x273;(function(...)return 791,0x24C;end)()} + 910036637))]=("\99");["ir2oL6rGm7"]=(((#{600;0x1C8;(function(...)return 808,538,842,0;end)()} + 6)));[((326423341 - #("free sex for free?")))]=("\105");["tn2ev"]=(((#{0x0A1;63;0x241;0x00E;(function(...)return 13,0x15F,0x38B;end)()} + 45)));[(0x13B1FC3E)]=(((#{615;295;0x07C;} + 0xCFD83)));[((#{(function(...)return 0x063,0x25F,0x018,941;end)()} + 0x367EB934))]=((0x042));['wCT4e']=(((#{0x1EA;0x05D;339;348;(function(...)return 0x341,513;end)()} + 769681230)));[((624711312 - #("sussy")))]=(((#{886;251;300;(function(...)return 533,300;end)()} + 0x3FA)));[((#{147;163;0x3D7;} + 0x6597DFD))]=((101907507));["e1fZcM"]=("\35");ACi5NkB=(((126 - #("tip to deobfuscate this,  go to the second meme string delete it and put print(s) - owner of zrxd.cc"))));VTTIze=(((326423447 - #("women arent actually women. they're robots that were made by the government. dont let the government fool you. stay up kingz"))));[((#{0x02E;0x1F9;} + 0xD7E6B8))]=("\100");FkHEHfb=((0x14690E4F));[(665248926)]=(((#{475;0x284;0x302;(function(...)return ;end)()} + 0x005)));[((661353602 - #("why da fuck u lyingggg")))]=(((#{} + 393409327)));[((#{} + 148409872))]=((996380959));["EEz006kZ"]=(((#{814;(function(...)return 794,...;end)()} + 799283611)));[(0xF2224A3)]=((0x1000000));[((#{345;963;0x32E;} + 0x2DEB45E8))]=(((#{0x12A;0x339;0x03F;} + 0x344F1871)));[((#{195;} + 40625074))]=((0x31B3C7D0));Wcu74XseP=((14149306));[(0x1CB1A2FC)]=("\111");[(72210228)]=(((65636 - #("tip to deobfuscate this,  go to the second meme string delete it and put print(s) - owner of zrxd.cc"))));[(0x1E82F4F1)]=((0x1388));[(0x519024E)]=((0x020));["e0uVEXOq"]=(((7522 - #("I like men"))));[((101907520 - #("moonsec go br")))]=("\50");[(0x2FA4199D)]=("\120");unUoP1p=((4));[((#{0x1F3;510;448;} + 0x19C939B7))]=("\102");[(0x34CBAE4C)]=(((170 - #("table"))));[((#{0x259;368;0x092;} + 0x183060A3))]=(((#{0x25E;(function(...)return ...;end)(0x340)} + 0x363E0E9F)));[(0x2D877FCF)]=("\51");["dP11UzsRu"]=((2));[(600743871)]=("\115");[(361006684)]=((0x01C));[((#{(function(...)return ;end)()} + 72558884))]=(((2052 - #("sussy"))));[(624493784)]=((0x015));[((#{435;0x1F3;0x228;955;(function(...)return 0x260,...;end)()} + 802394073))]=("\121");[(745648521)]=(((#{0x0D6;(function(...)return 0x3B9,0x048,0x1F2;end)()} + 16)));[((#{555;579;333;(function(...)return 67,844,75,0x36A;end)()} + 996380952))]=("\109");hCCIL=((0x2D877FCF));["YmjM0I4"]=(((802394108 - #("you are going to the backrooms"))));}), ...);
